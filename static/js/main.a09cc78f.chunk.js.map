{"version":3,"sources":["components/ContactForm.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","useState","submitted","setSubmitted","useFormRHF","register","errors","formState","handleSubmit","style","className","id","onSubmit","data","message","name","email","subject","axios","post","then","res","noValidate","type","required","value","maxLength","placeholder","pattern","rows","Content","state","isOpen","toggle","setState","avgTypingDelay","stdTypingDelay","cursor","show","blink","href","target","icon","size","class","Component","App","options","background","color","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","faLinkedinIn","faGithub","faEnvelopeOpen","faBlog","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a09cc78f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm as useFormRHF } from 'react-hook-form';\r\nimport axios from 'axios';\r\n\r\nconst ContactForm = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const { register, formState: {errors}, handleSubmit } = useFormRHF();\r\n\r\n  const onSubmit = (data) => {\r\n    const message = {\r\n      'Name': data.name,\r\n      'Email': data.email,\r\n      'Subject': data.subject,\r\n      'Message': data.message\r\n    }\r\n    axios.post('https://formspree.io/f/mjvjawry', message).then(res => res);\r\n    setSubmitted(true);\r\n  };\r\n  if(submitted) {\r\n    return <h6 style={{\"margin-top\": 20}}>Thank you! Your message has been sent successfully! I hope to respond as soon as possible!</h6>;\r\n  }\r\n  return (\r\n    <div className='ContactForm'>\r\n      <h2 style={{\"margin-top\": 20, \"font-family\": \"Montserrat\"}}>Contact Me!</h2>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-12 text-center'>\r\n            <div className='contactForm'>\r\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className='row formRow'>\r\n                  <div className='col-6' style={{\"font-family\": \"Montserrat\"}}>\r\n                    <input\r\n                      id='name'\r\n                      type='text'\r\n                      name='name'\r\n                      {...register(\"name\", {\r\n                          required: {value: \"Required\", message: 'Please enter your name'},\r\n                          maxLength: {\r\n                            value: 30,\r\n                            message: 'Please use 30 characters or less'\r\n                          }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Name'\r\n                    ></input>\r\n                    {errors.name && <p className='text-danger'>{errors.name.message}</p>}\r\n                  </div>\r\n                  <div className='col-6' style={{\"font-family\": \"Montserrat\"}}>\r\n                    <input\r\n                      id='email'\r\n                      type='email'\r\n                      name='email'\r\n                      {...register(\"email\", {\r\n                        required: \"Required\",\r\n                        pattern: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Email address'\r\n                    ></input>\r\n                    {errors.email && <p className='text-danger'>Please enter a valid email</p>}\r\n                  </div>\r\n                </div>\r\n                <div className='row formRow' style={{\"margin-top\": 20, \"font-family\": \"Montserrat\"}}>\r\n                  <div className='col'>\r\n                    <input\r\n                      id='subject'\r\n                      type='text'\r\n                      name='subject'\r\n                      {...register(\"subject\", {\r\n                        required: {value: \"Required\", message: 'Please enter a subject'},\r\n                        maxLength: {\r\n                          value: 80,\r\n                          message: 'Please use 80 characters or less'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Subject'\r\n                    ></input>\r\n                    {errors.subject && <p className='text-danger'>{errors.subject.message}</p>}\r\n                  </div>\r\n                </div>\r\n                <div className='row formRow' style={{\"margin-top\": 20, \"margin-bottom\": 20, \"font-family\": \"Montserrat\"}}>\r\n                  <div className='col'>\r\n                    <textarea\r\n                      rows={8}\r\n                      id='message'\r\n                      name='message'\r\n                      {...register(\"message\", {\r\n                        required: \"Required\",\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Message'\r\n                    ></textarea>\r\n                    {errors.message && <p className='text-danger'>Please enter a message</p>}\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className='btn btn-primary'>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport Typist from 'react-typist';\r\nimport 'react-typist/dist/Typist.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ContactForm from './ContactForm';\r\n\r\n\r\nclass Content extends Component {\r\n  state = {\r\n    isOpen: false\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1>Abhinay Pasunuri</h1>\r\n          <h6>\r\n            <Typist avgTypingDelay={80} stdTypingDelay={35} cursor={{ show: true, blink: true}}>\r\n              Master's in Computer Science Student\r\n            </Typist>\r\n          </h6>\r\n          <a href=\"https://www.linkedin.com/in/apasunuri\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'linkedin-in']} size='2x' /></a>\r\n          &nbsp;\r\n          &nbsp;\r\n          <a href=\"https://www.github.com/apasunuri\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'github']} size='2x' /></a>\r\n          &nbsp;\r\n          &nbsp;\r\n          {/*<a href=\"https://apasunuri.github.io/blog/\"><FontAwesomeIcon icon={['fas', 'blog']} size='2x' /></a>\r\n          &nbsp;\r\n          &nbsp;*/}\r\n          {/*<a href=\"mailto:abhinay.pasunuri088@gmail.com\"><FontAwesomeIcon icon={['fas', 'envelope-open']} size='2x' /></a>*/}\r\n          <a data-toggle=\"collapse\" href=\"#contactTarget\" aria-expanded=\"false\" aria-controls=\"contactTarget\"><FontAwesomeIcon icon={['fas', 'envelope-open']} size='2x' /></a>\r\n          <div class=\"collapse\" id=\"contactTarget\">\r\n            <ContactForm />\r\n          </div>\r\n          &nbsp;\r\n          &nbsp;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Content;","import './App.css';\nimport Content from './components/Content';\nimport Particles from 'react-tsparticles';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <div id=\"tsparticles\">\n          <Particles\n            options={{\n              background: {\n                color: {\n                  value: \"#1a222c\",\n                },\n              },\n              fpsLimit: 60,\n              interactivity: {\n                detectsOn: \"canvas\",\n                events: {\n                  onClick: {\n                    enable: true,\n                    mode: \"push\",\n                  },\n                  onHover: {\n                    enable: true,\n                    mode: \"repulse\",\n                  },\n                  resize: true,\n                },\n                modes: {\n                  bubble: {\n                    distance: 400,\n                    duration: 0.25,\n                    opacity: 0.8,\n                    size: 40,\n                  },\n                  push: {\n                    quantity: 4,\n                  },\n                  repulse: {\n                    distance: 200,\n                    duration: 0.25,\n                  },\n                },\n              },\n              particles: {\n                color: {\n                  value: \"#ffffff\",\n                },\n                links: {\n                  color: \"#ffffff\",\n                  distance: 150,\n                  enable: true,\n                  opacity: 0.5,\n                  width: 1,\n                },\n                collisions: {\n                  enable: true,\n                },\n                move: {\n                  direction: \"none\",\n                  enable: true,\n                  outMode: \"bounce\",\n                  random: false,\n                  speed: 3,\n                  straight: false,\n                },\n                number: {\n                  density: {\n                    enable: true,\n                    value_area: 800,\n                  },\n                  value: 82,\n                },\n                opacity: {\n                  value: 0.5,\n                },\n                shape: {\n                  type: \"circle\",\n                },\n                size: {\n                  random: true,\n                  value: 2,\n                },\n              },\n              detectRetina: true,\n            }}\n          />\n          </div>\n          <div className=\"App-header\">\n            <Content />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEnvelopeOpen, faBlog } from '@fortawesome/free-solid-svg-icons';\nimport { faLinkedinIn, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(\n  faLinkedinIn,\n  faGithub,\n  faEnvelopeOpen,\n  faBlog\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}